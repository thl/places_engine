<% @object.is_public = true if @object.new_record? %>
<%= tagged_tinymce_script %>
<fieldset>
	<legend><%= ts :for, :what => AssociationNote.human_name.titleize, :whom => "#{@object.notable}\'s #{@object.association_type_name}" %></legend>
<%= f.hidden_field :id %>
<%= f.hidden_field :association_type %>
	<div class="row">
<%=   f.label(:custom_note_title, ts('type.in', :what => Note.human_attribute_name(:custom_note_title))) %>
<%=   f.text_field :custom_note_title, :class => :text %>
	</div>
	<div class="row">
<%=   f.label(:note_title_id, ts('or.record', :what => t('choose.from', :what => NoteTitle.human_name(:count => :many))).capitalize) %>
<%=   f.collection_select :note_title_id, NoteTitle.all.sort{|a,b| a.to_s <=> b.to_s}, :id, :to_s, :include_blank=>true %>
	</div>
	<div class="row">
<%=   f.label :content, Note.human_name.titleize.s %>
	</div>
	<div class="row">
<%=   f.text_area :content, :rows=>4, :class => 'mceEditor' %>
	</div>
	<div class="row">
<%=   f.label(:is_public).s %>
<%=   f.check_box :is_public %>
	</div>
<%= link_to ts('add.record', :what => t('new.record', :what => t(:author).capitalize)), polymorphic_path([:admin, @object.notable, @object.class.name.tableize], :action => 'add_author'), :remote => true %>
	<div id="authors_div">
<%    for author in @object.authors %>
<%=     render :partial => 'authors_selector', :locals => {:selected => author.id} %>
<%    end %>
	</div>
	<div id="update_div"/>	
</fieldset>