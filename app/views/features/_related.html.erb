<script type="text/javascript">
jQuery(document).ready(function(){
  
  // Ajaxify the pagination for lists of features
  jQuery('.has-ajax-pagination .pagination a').live('click', function() {
    var this_link = this;
    jQuery.ajax({
      type: 'POST',
      url: this.href,
      success: function(html){
        jQuery(this_link).parents('.pagination-click-results:first').html(html);
      }
    });
    return false;
  });

  // Since clicking on links of the form "/features#59" would normally just change the url
  // hash and not change the page content, we need to send these links to NodeTree.showNode(id),
  // which opens up the specified feature. 
  jQuery('.has-hash-feature-links a[href*=features#]').live('click', function(){
    var id = this.href.match(/features#([\d]+)$/);
    if(id){
      id = id[1];
      NodeTree.showNode(id);
    }
    return true;
  });
});

// This is a switch that we can turn off when we "Expand/collapse all" to allow more than one
// Ajax div to be open at once.
var accordion_enabled = true;

function on_category_click(ajax_div_id){
  var ajax_div = $('#'+ajax_div_id);
  var link_parent = ajax_div.prev('p').find('a');
  var toggle_speed = 300;
  // This is used after ajax_div.toggle(), so it is the opposite of the current state.
  var is_hidden = !(ajax_div.css('display') == 'none');
  
  // Toggle the Ajax div
  ajax_div.toggle(toggle_speed);

  if(accordion_enabled){
    // Hide all of the other Ajax divs and switch their "expanded/contracted" state.
    $('.related-feature-list').not('#'+ajax_div_id)
      .hide(toggle_speed)
      .prev('p').find('a').removeClass('expandable-link-expanded').addClass('expandable-link-contracted');
  }

  // Change the Ajax div's "expanded/contracted" state.
  if(is_hidden){
	link_parent.removeClass('expandable-link-expanded').addClass('expandable-link-contracted');
  }else{
	link_parent.removeClass('expandable-link-contracted').addClass('expandable-link-expanded');
  }

  // If the ajax_div is now hidden, return false so that the Ajax isn't called again.
  if(is_hidden){
	return false;
  }
  return true;
}

function expand_all_categories(){
  accordion_enabled = false;
  $('.related-features-categories .expandable-link-contracted').click();
  accordion_enabled = true;
  $('.collapse-all-categories').show();
  $('.expand-all-categories').hide();
}

function collapse_all_categories(){
  accordion_enabled = false;
  $('.related-features-categories .expandable-link-expanded').click();
  accordion_enabled = true;
  $('.expand-all-categories').show();
  $('.collapse-all-categories').hide();
}
</script>

<% feature_label = fname_labels(@feature).s %>
<% relation_counts = CachedFeatureRelationCategory.find(:all, :select => "feature_relation_type_id, feature_is_parent, COUNT(DISTINCT related_feature_id) AS count", :group => "feature_relation_type_id, feature_is_parent", :conditions => {:feature_id => @feature.id}, :order => :feature_relation_type_id) %>

<% if relation_counts.length > 0 %>
<p>
  <%= link_to_function "Expand all", "expand_all_categories()", :class => "expand-all-categories expandable-link-contracted", :style => "font-weight:bold;font-variant:small-caps;" %>
  <%= link_to_function "Collapse all", "collapse_all_categories()", :class => "collapse-all-categories expandable-link-expanded", :style => "font-weight:bold;font-variant:small-caps;display:none;" %>
</p>

<div class="related-features-categories has-ajax-pagination has-hash-feature-links">
<% relation_counts.each do |rc| %>

  <%
	feature_relation_type = FeatureRelationType.find(rc[:feature_relation_type_id])
	feature_is_parent = rc[:feature_is_parent]
	count = rc[:count]
  %>

  <h3><%= feature_label %> <%= "#{feature_is_parent ? feature_relation_type.label : feature_relation_type.asymmetric_label}" %> the following features (<%= count %>):</h3>
  <% # Is there a way to :include => categories and use an :order instead of this .sort{}? %>
  <% CachedFeatureRelationCategory.count(:all, :group => 'category_id', :conditions => {:feature_id => @feature.id, :feature_relation_type_id => feature_relation_type.id, :feature_is_parent => feature_is_parent}).sort{|a,b|
    # Some of these .finds are returning nil, but it's not clear why.
    if Category.find(a[0]).nil? || Category.find(b[0]).nil?
      0
    else
      Category.find(a[0]).title.casecmp(Category.find(b[0]).title)
    end
    }.each do |c| %>
    <% category_id, count = c %>
    <% div_id = "list_#{category_id}_#{feature_relation_type.id}_#{feature_is_parent}" %>

    <p>
      <strong>
  	    <%= link_to_remote Category.find(category_id).title, :url => {:action => :related_list, :id => @feature.id, :category_id => category_id, :feature_relation_type_id => feature_relation_type.id, :feature_is_parent => feature_is_parent.to_s}, :update => div_id,
        :before => "if(!on_category_click('#{div_id}')){return false;}", :html => {:class => "expandable-link-contracted"}
          %>
  	  </strong> (<%= count %>)
    </p>

    <div id="<%= div_id %>" style="display:none;" class="related-feature-list pagination-click-results"></div>
	
  <% end %>

<% end %>
</div>

<br />
<p>
  <%= link_to_function "Expand all", "expand_all_categories()", :class => "expand-all-categories expandable-link-contracted", :style => "font-weight:bold;font-variant:small-caps;" %>
  <%= link_to_function "Collapse all", "collapse_all_categories()", :class => "collapse-all-categories expandable-link-expanded", :style => "font-weight:bold;font-variant:small-caps;display:none;" %>
</p>
<% else %>
<p>
  Sorry, this feature does not currently have any related features.
</p>
<% end %>
