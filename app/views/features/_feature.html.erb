<div id="FeatureDetails">
<%= content_tag :h2, "#{feature_name_header(feature)} #{edit_item_link(admin_feature_path(feature)) if logged_in?}".html_safe %>
<%= time_units_for(feature) %>
<%= f_breadcrumb(feature) %><br/>
<%= render :partial => 'feature_types', :locals => {:feature => feature} %><br/>
<%  summary = feature.summary
    if !summary.nil? %>
<%=   summary.content.html_safe %>
      <br/>
<%  end %>
<%  closest_fid_with_shapes = feature.closest_feature_with_shapes :logged_in? => logged_in?
    if closest_fid_with_shapes.nil?
      shapes = []
      map_fid = nil
    else
      shapes = closest_fid_with_shapes.shapes
      shapes = shapes.where(:is_public => true) if !logged_in?
      map_fid = closest_fid_with_shapes.fid
    end %>
    <div id="gallery">
<%  if !map_fid.nil? %>
      <div id="map-column">
        <div id="inset_map" class="fid-<%= map_fid %> language-<%= current_view.code %>"></div>
<%=     javascript_on_load do %>
          InsetMap.init({proxyUrl: '<%= proxy_engine_proxy_path %>?proxy_url='});
<%      end %>
        <p class = "view-on-map">
<%=       link_to "#{image_tag("#{InterfaceUtils::Server.get_url}/global/images/icon-map-simple.gif", :alt => "")} #{ts 'map.full'}".html_safe, "#{InterfaceUtils::Server.get_url}/places/maps/interactive/#fid:#{map_fid};language:#{current_view.code}" %>
<%=       link_to "#{image_tag("#{InterfaceUtils::Server.get_url}/global/images/icon-google-maps.png", :alt => "")}#{ts 'map.google'}".html_safe, "http://maps.google.com/maps?q=http://places.thlib.org"+url_for(:action => :gis_resources, :fids => map_fid, :format => "kmz"), :target => "_blank" %>&nbsp;
<%=       link_to "#{image_tag("#{InterfaceUtils::Server.get_url}/global/images/icon-google-earth.png", :alt => "")} #{ts 'map.earth'}".html_safe, {:action => :gis_resources, :fids => map_fid, :format => "kmz"}, :target => "_blank" %>
        </p>
      </div>
<%  end
    illustration = feature.illustration
    if !illustration.nil?
	  picture = feature.illustration.picture
	  rendered_height = 200
	  rendered_width = picture.width.nil? || picture.height.nil? ? nil : picture.width * rendered_height / picture.height %>
      <div id="illustration"<%= " style=\"width:#{rendered_width}px;\"".html_safe if !rendered_width.nil? %>>
<%    if picture.instance_of?(MmsIntegration::Picture) %>
<%=     link_to image_tag(picture.url, :height => rendered_height), MmsIntegration::Medium.element_url(picture.id, :format => 'html') %>
<%    else %>
<%=     link_to image_tag(picture.url, :height => rendered_height), picture.url %>
<%    end
      place = illustration.place
      if place.nil?
	    location = nil
	  else
	    location = link_to place.prioritized_name(current_view).name, feature_path(place.fid)
	    parent_place = place.context_feature
	    location << ", #{link_to parent_place.prioritized_name(current_view).name, feature_path(parent_place.fid)}".html_safe if !parent_place.nil?
	  end
      if picture.caption.nil?
        if !location.nil? %>
          <p class = "view-on-map"><%= location %></p>
<%      end
      else %>
        <p class = "view-on-map">
<%=       picture.caption.html_safe %>
<%        if !location.nil? %>
            (<%= location %>)
<%        end %>
        </p>
<%    end %>
      </div>
<%  end %>
    </div>
    <div style="clear: both;"></div>
<%  associated_resources = []
    count = feature.descriptions.size
    associated_resources << [Description.model_name.human(:count => count).titleize.s, count, feature_description_path(feature.fid, feature.descriptions.first)] if count > 0
    count = feature.category_count
    associated_resources << [Topic.human_name(:count => count).titleize.s, count, topics_feature_path(feature.fid)] if count > 0
    count = feature.media_count(:type => 'Picture')
    associated_resources << [MmsIntegration::Picture.human_name(:count => count).titleize.s, count, feature.pictures_url] if count > 0
    count = feature.media_count(:type => 'Video')
    associated_resources << [ts(:video, :count => count), count, feature.videos_url] if count > 0
    count = feature.media_count(:type => 'Document')
    associated_resources << [MmsIntegration::Document.human_name(:count => count).titleize.s, count, feature.documents_url] if count > 0
    if associated_resources.size > 0 %>
      <h3><%= ts 'associate.d.record', :what => MmsIntegration::Medium.human_name(:count => :many).titleize %></h3>
      <ul><%= associated_resources.collect{|ar| "<li>" + link_to("#{ar[0]} (#{ar[1]})", ar[2]) + "</li>" }.join('').html_safe %></ul>
<%  end %>
    <p>
      <br />
<%=   button_to_function ts('view.record', :what => t('more.record', :what => t('feature.detail', :count => :many))), "$('#more_feature_detail').show(); $(this).hide(); $('#less_feature_detail_button').show(); if (typeof(frame_service) != \"undefined\") frame_service.set_iframe_height()", :id => "more_feature_detail_button", :style => ("display:none;" if current_show_feature_details) %>
<%=   button_to_function ts(:hide, :what => t('feature.detail', :count => :many)), "$('#more_feature_detail').hide(); $(this).hide(); $('#more_feature_detail_button').show();", :id => "less_feature_detail_button", :style => ("display:none;" unless current_show_feature_details) %>
    </p>
    <div id="more_feature_detail" style="<%= "display: none;" unless current_show_feature_details %>">
<%= render :partial => 'topics', :locals => {:feature => feature} %>
    <h3><%= FeatureName.model_name.human(:count => feature.names.size).titleize.s %></h3>
<%= feature_name_ul(feature,false) %>
    <dl class="no-style">
<%  feature.names.roots.order('position').each do |name| %>
<%=   "<dt><strong>#{ts(:for, :what => FeatureName.human_attribute_name(:etymology), :whom => name.name.to_s)}:</dt></strong><dd>#{name.etymology.to_s.s}</dd>".html_safe unless name.etymology.blank? %>
<%  end %>
    </dl>
<%= note_popup_link_list_for(feature, {:association_type => FeatureName.model_name}) %>
    <h3><%= ts 'id.this', :count => :many %></h3>
<%  if show_old_pid %>
      <p><%= "#{ts :current, :what => Feature.human_attribute_name(:pid)}: #{feature.pid}" %></p>
      <p><%= "#{Feature.human_attribute_name(:old_pid).s}: #{feature.old_pid}" %></p>
<%  else %>
      <p><%= "#{Feature.human_attribute_name(:pid).s}: #{feature.pid}" %></p>
<%  end %>
<%  feature.geo_codes.each do |geo_code| %>
    <p>
<%=   geo_code %>: <%= geo_code.geo_code_value %>
<%=   note_popup_link_for(geo_code) %>
<%=   time_units_for(geo_code) %>
    </p>
<%  end %>
<%= note_popup_link_list_for(feature, {:association_type => FeatureGeoCode.model_name}) %>
<%  simple_altitudes = feature.shapes.collect(&:altitude).select{|a| !a.nil? }
    altitudes = feature.altitudes
    altitude_size = simple_altitudes.size + altitudes.size
    if altitude_size > 0 %>
<%=   content_tag :h3, Altitude.model_name.human(:count => altitude_size).titleize.s %>
<%=   altitude_size>1 ? '<ul>'.html_safe : '<p>'.html_safe %>
<%    if simple_altitudes.size == 1 %>
<%=     simple_altitudes.first %>
<%    else %>
<%      simple_altitudes.each do |altitude| %>
          <li><%= altitude %></li>
<%      end %>
<%    end %>
<%    altitudes.each do |altitude| %>
<%=     '<li>' if altitude_size>1 %>
<%=h    altitude_display_string(altitude) %>
<%=     note_popup_link_for(altitude) %>
<%=     time_units_for(altitude) %>
<%=     '</li>' if altitude_size>1 %>
<%    end %>
<%=   altitude_size>1 ? '</ul>'.html_safe : '</p>'.html_safe %>
<%  end
    if !shapes.empty? %>
<%=   content_tag :h3, Shape.model_name.human(:count => shapes.size).titleize.s %>
<%    if shapes.size>1 %>
        <ul>
<%      shapes.each do |shape| %>
          <li>
<%=h      shape_display_string(shape) %>
<%=       note_popup_link_for(shape) %>
<%=       time_units_for(shape) %>
          </li>
<%      end %>
        </ul>
<%    else
        shape = shapes.first %>
        <p>
<%=h      shape_display_string(shape) %>
<%=       note_popup_link_for(shape) %>
<%=       time_units_for(shape) %>
        </p>
<%    end %>
<%=   content_tag :h3, ts('resource.gis.feature_alone') %>
      <ul>
        <li><%= link_to "GML", :action => :gis_resources, :fids => feature.fid, :format => "gml" %></li>
        <li><%= link_to "KML", :action => :gis_resources, :fids => feature.fid, :format => "kml" %></li>
        <li><%= link_to "Shapefile", :action => :gis_resources, :fids => feature.fid, :format => "shp" %></li>
      </ul>
<%    if !feature.descendants.empty? %>
<%=     content_tag :h3, ts('resource.gis.contained_features') %>
<%      # For features with roughly > 300 descendants, we're getting a timeout, so we'll temporarily fix this by not allowing these to be downloaded.
        if feature.descendants.length < 300 %>
        <ul>
          <li><%= link_to "GML", :action => :gis_resources, :fids => feature.fid, :format => "gml", :contained => "1" %></li>
          <li><%= link_to "KML", :action => :gis_resources, :fids => feature.fid, :format => "kml", :contained => "1" %></li>
          <li><%= link_to "Shapefile", :action => :gis_resources, :fids => feature.fid, :format => "shp", :contained => "1" %></li>
        </ul>
<%      else %>
          <p><%= ts 'snippet.feature.too_many' %></p>
<%      end
      end %>
<%=   note_popup_link_list_for(feature, {:association_type => Shape.model_name}) %>
<%  end %>
    </div>
</div>
<br class="clear"/>